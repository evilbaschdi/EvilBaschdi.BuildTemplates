parameters:
  - name: "projectName"
    type: string
  - name: "framework"
    type: string
    values:
      - net8.0
      - net8.0-windows
      - net9.0
      - net9.0-windows

jobs:
  - job: BuildNZip
    pool:
      name: x-agentpool
    workspace:
      clean: all
    variables:
      buildPlatform: "Any CPU"
      buildConfiguration: "Release"

    steps:
      - task: UseDotNet@2
        displayName: "Use .Net Core sdk from global.json"
        inputs:
          useGlobalJson: true

      - task: DotNetCoreCLI@2
        displayName: "dotnet restore"
        inputs:
          command: restore
          projects: ${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          feedsToUse: config
          nugetConfigPath: NuGet.config

      - task: DotNetCoreCLI@2
        displayName: "dotnet build"
        inputs:
          projects: ${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          arguments: "--configuration $(BuildConfiguration)"

      - task: DotNetCoreCLI@2
        displayName: "dotnet test"
        inputs:
          command: test
          projects: ${{ parameters.projectName }}.Tests/${{ parameters.projectName }}.Tests.csproj
          arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
          publishTestResults: true
        continueOnError: true

      #- task: alanwales.resharper-code-analysis.custom-build-task.ResharperCli@2
      #  displayName: 'Automated code quality checks'
      #  inputs:
      #    solutionOrProjectPath: ${{ parameters.projectName }}/${{ parameters.projectName }}.csproj

      - task: DotNetCoreCLI@2
        displayName: "dotnet publish"
        inputs:
          command: "publish"
          publishWebProjects: false
          projects: "${{ parameters.projectName }}/${{ parameters.projectName }}.csproj"
          arguments: "-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory)/Output --framework ${{ parameters.framework }} --self-contained false --no-build"
          zipAfterPublish: true
          modifyOutputPath: true

      - task: PublishCodeCoverageResults@2
        displayName: "Publish code coverage report"
        inputs:
          summaryFileLocation: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: ZipArchive"
        inputs:
          ArtifactName: "ZipArchive"
        condition: succeededOrFailed()
