parameters:
  - name: "projectName"
    type: string
  - name: "framework"
    type: string
    values:
      - net8.0
      - net8.0-windows
      - net9.0
      - net9.0-windows
      - net10.0
      - net10.0-windows
  - name: "projectParentDirectory"
    type: string

jobs:
  - job: BuildNPack
    pool:
      name: x-agentpool
    variables:
      buildPlatform: "Any CPU"
      buildConfiguration: "Release"

    steps:
      - task: UseDotNet@2
        displayName: "Use .Net Core sdk from global.json"
        inputs:
          useGlobalJson: true
          includePreviewVersions: true

      - task: DotNetCoreCLI@2
        displayName: "dotnet restore"
        inputs:
          command: restore
          projects: ${{ parameters.projectParentDirectory }}${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          feedsToUse: config
          nugetConfigPath: ${{ parameters.projectParentDirectory }}NuGet.config

      - task: DotNetCoreCLI@2
        displayName: "dotnet build"
        inputs:
          projects: ${{ parameters.projectParentDirectory }}${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          arguments: "--configuration $(BuildConfiguration)"

      - task: DotNetCoreCLI@2
        displayName: "dotnet test"
        inputs:
          command: test
          projects: ${{ parameters.projectParentDirectory }}${{ parameters.projectName }}.Tests/${{ parameters.projectName }}.Tests.csproj
          arguments: '--configuration $(BuildConfiguration) -s $(System.DefaultWorkingDirectory)/${{ parameters.projectParentDirectory }}.runsettings --framework ${{ parameters.framework }} --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
          publishTestResults: true
        continueOnError: true

      - task: DotNetCoreCLI@2
        displayName: "dotnet custom pack main"
        inputs:
          command: custom
          projects: ${{ parameters.projectParentDirectory }}${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          custom: pack
          arguments: "-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory) --no-build"
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

      - task: DotNetCoreCLI@2
        displayName: "dotnet custom pack not main"
        inputs:
          command: custom
          projects: ${{ parameters.projectParentDirectory }}${{ parameters.projectName }}/${{ parameters.projectName }}.csproj
          custom: pack
          arguments: "-c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory) --no-build --version-suffix $(Build.SourceBranchName)"
        condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))

      #- task: PublishCodeCoverageResults@2
      # displayName: "Publish code coverage report"
      #inputs:
      # summaryFileLocation: "$(Agent.TempDirectory)/**/coverage.cobertura.xml"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Nuget-Package"
        inputs:
          ArtifactName: "Nuget-Package"
        condition: succeededOrFailed()
